(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var LabEditor, createCoffeeEditor, createJadeEditor,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

createCoffeeEditor = function(el, fn) {
  var codemirror;
  return codemirror = CodeMirror.fromTextArea(el, {
    mode: 'coffeescript',
    lineNumbers: true,
    matchBrackets: true,
    indentWithTabs: true,
    vimMode: true,
    showCursorWhenSelecting: true,
    extraKeys: {
      'Ctrl-S': fn
    }
  });
};

createJadeEditor = function(el, fn) {
  var codemirror;
  return codemirror = CodeMirror.fromTextArea(el, {
    mode: 'jade',
    vimMode: true,
    lineNumbers: true,
    showCursorWhenSelecting: true,
    extraKeys: {
      'Ctrl-S': fn
    }
  });
};

LabEditor = (function() {
  function LabEditor() {
    this.render = __bind(this.render, this);
    this.update = __bind(this.update, this);
    this.coffeeEditor = createCoffeeEditor(document.querySelector('#coffee-editor'), this.update);
    this.jadeEditor = createJadeEditor(document.querySelector('#jade-editor'), this.update);
  }

  LabEditor.prototype.update = function() {
    var coffee, html, _jade;
    _jade = this.jadeEditor.getValue();
    html = jade.compile(_jade);
    $('.output').html(html);
    localStorage.jade = _jade;
    coffee = this.coffeeEditor.getValue();
    localStorage.coffee = coffee;
    return eval(CoffeeScript.compile(coffee));
  };

  LabEditor.prototype.render = function() {
    var $coffeeButton, $coffeeContainer, $jadeButton, $jadeContainer, updateMode, _ref;
    $coffeeButton = $('.coffee');
    $jadeButton = $('.jade');
    $coffeeContainer = $('.coffee-editor-container');
    $jadeContainer = $('.jade-editor-container');
    this.mode = (_ref = localStorage.mode) != null ? _ref : 'both';
    updateMode = (function(_this) {
      return function() {
        switch (_this.mode) {
          case 'coffee':
            $coffeeContainer.show();
            return $jadeContainer.hide();
          case 'jade':
            $coffeeContainer.hide();
            return $jadeContainer.show();
          case 'both':
            $coffeeContainer.show();
            return $jadeContainer.show();
        }
      };
    })(this);
    $('.coffee').on('click', (function(_this) {
      return function() {
        localStorage.mode = _this.mode = 'coffee';
        return updateMode();
      };
    })(this));
    $('.jade').on('click', (function(_this) {
      return function() {
        localStorage.mode = _this.mode = 'jade';
        return updateMode();
      };
    })(this));
    $('.both').on('click', (function(_this) {
      return function() {
        localStorage.mode = _this.mode = 'both';
        return updateMode();
      };
    })(this));
    updateMode();
    if (localStorage.coffee) {
      this.coffeeEditor.setValue(localStorage.coffee);
    }
    if (localStorage.jade) {
      return this.jadeEditor.setValue(localStorage.jade);
    }
  };

  return LabEditor;

})();

$(function() {
  window.editor = new LabEditor;
  return editor.render();
});


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlcyI6WyIvVXNlcnMvbWl6Y2hpL3NhbmRib3gvcHJldmlld2VyL25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9taXpjaGkvc2FuZGJveC9wcmV2aWV3ZXIvc3JjL2xhYi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxJQUFBLCtDQUFBO0VBQUEsa0ZBQUE7O0FBQUEsa0JBQUEsR0FBcUIsU0FBQyxFQUFELEVBQUssRUFBTCxHQUFBO0FBQ25CLE1BQUEsVUFBQTtTQUFBLFVBQUEsR0FBYSxVQUFVLENBQUMsWUFBWCxDQUF3QixFQUF4QixFQUNYO0FBQUEsSUFBQSxJQUFBLEVBQU0sY0FBTjtBQUFBLElBQ0EsV0FBQSxFQUFhLElBRGI7QUFBQSxJQUVBLGFBQUEsRUFBZSxJQUZmO0FBQUEsSUFHQSxjQUFBLEVBQWdCLElBSGhCO0FBQUEsSUFJQSxPQUFBLEVBQVMsSUFKVDtBQUFBLElBS0EsdUJBQUEsRUFBeUIsSUFMekI7QUFBQSxJQU1BLFNBQUEsRUFDRTtBQUFBLE1BQUEsUUFBQSxFQUFVLEVBQVY7S0FQRjtHQURXLEVBRE07QUFBQSxDQUFyQixDQUFBOztBQUFBLGdCQVdBLEdBQW1CLFNBQUMsRUFBRCxFQUFLLEVBQUwsR0FBQTtBQUNqQixNQUFBLFVBQUE7U0FBQSxVQUFBLEdBQWEsVUFBVSxDQUFDLFlBQVgsQ0FBd0IsRUFBeEIsRUFDWDtBQUFBLElBQUEsSUFBQSxFQUFNLE1BQU47QUFBQSxJQUNBLE9BQUEsRUFBUyxJQURUO0FBQUEsSUFFQSxXQUFBLEVBQWEsSUFGYjtBQUFBLElBR0EsdUJBQUEsRUFBeUIsSUFIekI7QUFBQSxJQUlBLFNBQUEsRUFDRTtBQUFBLE1BQUEsUUFBQSxFQUFVLEVBQVY7S0FMRjtHQURXLEVBREk7QUFBQSxDQVhuQixDQUFBOztB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QSxDQUFBLEVBRnFCO01BQUEsRUFBQTtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBdkIsQ0F4QkEsQ0FBQTtBQUFBLElBNEJBLENBQUEsQ0FBRSxPQUFGLENBQVUsQ0FBQyxFQUFYLENBQWMsT0FBZCxFQUF1QixDQUFBLFNBQUEsS0FBQSxHQUFBO2FBQUEsU0FBQSxHQUFBO0FBQ3JCLFFBQUEsWUFBWSxDQUFDLElBQWIsR0FBb0IsS0FBQyxDQUFBLElBQUQsR0FBUSxNQUE1QixDQUFBO2VBQ0EsVUFBQSxDQUFBLEVBRnFCO01BQUEsRUFBQTtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBdkIsQ0E1QkEsQ0FBQTtBQUFBLElBZ0NBLFVBQUEsQ0FBQSxDQWhDQSxDQUFBO0FBa0NBLElBQUEsSUFBRyxZQUFZLENBQUMsTUFBaEI7QUFDRSxNQUFBLElBQUMsQ0FBQSxZQUFZLENBQUMsUUFBZCxDQUF1QixZQUFZLENBQUMsTUFBcEMsQ0FBQSxDQURGO0tBbENBO0FBcUNBLElBQUEsSUFBRyxZQUFZLENBQUMsSUFBaEI7YUFDRSxJQUFDLENBQUEsVUFBVSxDQUFDLFFBQVosQ0FBcUIsWUFBWSxDQUFDLElBQWxDLEVBREY7S0F0Q007RUFBQSxDQWhCUixDQUFBOzttQkFBQTs7SUFyQkYsQ0FBQTs7QUFBQSxDQThFQSxDQUFFLFNBQUEsR0FBQTtBQUNBLEVBQUEsTUFBTSxDQUFDLE1BQVAsR0FBZ0IsR0FBQSxDQUFBLFNBQWhCLENBQUE7U0FDQSxNQUFNLENBQUMsTUFBUCxDQUFBLEVBRkE7QUFBQSxDQUFGLENBOUVBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImNyZWF0ZUNvZmZlZUVkaXRvciA9IChlbCwgZm4pIC0+XG4gIGNvZGVtaXJyb3IgPSBDb2RlTWlycm9yLmZyb21UZXh0QXJlYSBlbCxcbiAgICBtb2RlOiAnY29mZmVlc2NyaXB0J1xuICAgIGxpbmVOdW1iZXJzOiB0cnVlXG4gICAgbWF0Y2hCcmFja2V0czogdHJ1ZVxuICAgIGluZGVudFdpdGhUYWJzOiB0cnVlXG4gICAgdmltTW9kZTogdHJ1ZVxuICAgIHNob3dDdXJzb3JXaGVuU2VsZWN0aW5nOiB0cnVlXG4gICAgZXh0cmFLZXlzOlxuICAgICAgJ0N0cmwtUyc6IGZuXG5cbmNyZWF0ZUphZGVFZGl0b3IgPSAoZWwsIGZuKSAtPlxuICBjb2RlbWlycm9yID0gQ29kZU1pcnJvci5mcm9tVGV4dEFyZWEgZWwsXG4gICAgbW9kZTogJ2phZGUnXG4gICAgdmltTW9kZTogdHJ1ZVxuICAgIGxpbmVOdW1iZXJzOiB0cnVlXG4gICAgc2hvd0N1cnNvcldoZW5TZWxlY3Rpbmc6IHRydWVcbiAgICBleHRyYUtleXM6XG4gICAgICAnQ3RybC1TJzogZm5cblxuY2xhc3MgTGFiRWRpdG9yXG4gIGNvbnN0cnVjdG9yOiAtPlxuICAgIEBjb2ZmZWVFZGl0b3IgPSBjcmVhdGVDb2ZmZWVFZGl0b3IgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvZmZlZS1lZGl0b3InKSwgQHVwZGF0ZVxuICAgIEBqYWRlRWRpdG9yICAgPSBjcmVhdGVKYWRlRWRpdG9yIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNqYWRlLWVkaXRvcicpLCBAdXBkYXRlXG5cbiAgdXBkYXRlOiA9PlxuICAgICMgSmFkZVxuICAgIF9qYWRlID0gQGphZGVFZGl0b3IuZ2V0VmFsdWUoKVxuICAgIGh0bWwgPSBqYWRlLmNvbXBpbGUgX2phZGVcbiAgICAkKCcub3V0cHV0JykuaHRtbCBodG1sXG4gICAgbG9jYWxTdG9yYWdlLmphZGUgPSBfamFkZVxuXG4gICAgIyBDb2ZmZWVcbiAgICBjb2ZmZWUgPSBAY29mZmVlRWRpdG9yLmdldFZhbHVlKClcbiAgICBsb2NhbFN0b3JhZ2UuY29mZmVlID0gY29mZmVlXG4gICAgZXZhbCBDb2ZmZWVTY3JpcHQuY29tcGlsZSBjb2ZmZWVcblxuICByZW5kZXI6ID0+XG4gICAgJGNvZmZlZUJ1dHRvbiA9ICQoJy5jb2ZmZWUnKVxuICAgICRqYWRlQnV0dG9uID0gJCgnLmphZGUnKVxuXG4gICAgJGNvZmZlZUNvbnRhaW5lciA9ICQoJy5jb2ZmZWUtZWRpdG9yLWNvbnRhaW5lcicpXG4gICAgJGphZGVDb250YWluZXIgPSAkKCcuamFkZS1lZGl0b3ItY29udGFpbmVyJylcblxuICAgIEBtb2RlID0gbG9jYWxTdG9yYWdlLm1vZGUgPyAnYm90aCdcblxuICAgIHVwZGF0ZU1vZGUgPSA9PlxuICAgICAgc3dpdGNoIEBtb2RlXG4gICAgICAgIHdoZW4gJ2NvZmZlZSdcbiAgICAgICAgICAkY29mZmVlQ29udGFpbmVyLnNob3coKVxuICAgICAgICAgICRqYWRlQ29udGFpbmVyLmhpZGUoKVxuICAgICAgICB3aGVuICdqYWRlJ1xuICAgICAgICAgICRjb2ZmZWVDb250YWluZXIuaGlkZSgpXG4gICAgICAgICAgJGphZGVDb250YWluZXIuc2hvdygpXG4gICAgICAgIHdoZW4gJ2JvdGgnXG4gICAgICAgICAgJGNvZmZlZUNvbnRhaW5lci5zaG93KClcbiAgICAgICAgICAkamFkZUNvbnRhaW5lci5zaG93KClcblxuICAgICQoJy5jb2ZmZWUnKS5vbiAnY2xpY2snLCA9PlxuICAgICAgbG9jYWxTdG9yYWdlLm1vZGUgPSBAbW9kZSA9ICdjb2ZmZWUnXG4gICAgICB1cGRhdGVNb2RlKClcblxuICAgICQoJy5qYWRlJykub24gJ2NsaWNrJywgPT5cbiAgICAgIGxvY2FsU3RvcmFnZS5tb2RlID0gQG1vZGUgPSAnamFkZSdcbiAgICAgIHVwZGF0ZU1vZGUoKVxuXG4gICAgJCgnLmJvdGgnKS5vbiAnY2xpY2snLCA9PlxuICAgICAgbG9jYWxTdG9yYWdlLm1vZGUgPSBAbW9kZSA9ICdib3RoJ1xuICAgICAgdXBkYXRlTW9kZSgpXG5cbiAgICB1cGRhdGVNb2RlKClcblxuICAgIGlmIGxvY2FsU3RvcmFnZS5jb2ZmZWVcbiAgICAgIEBjb2ZmZWVFZGl0b3Iuc2V0VmFsdWUgbG9jYWxTdG9yYWdlLmNvZmZlZVxuXG4gICAgaWYgbG9jYWxTdG9yYWdlLmphZGVcbiAgICAgIEBqYWRlRWRpdG9yLnNldFZhbHVlIGxvY2FsU3RvcmFnZS5qYWRlXG5cbiQgLT5cbiAgd2luZG93LmVkaXRvciA9IG5ldyBMYWJFZGl0b3JcbiAgZWRpdG9yLnJlbmRlcigpXG4iXX0=
